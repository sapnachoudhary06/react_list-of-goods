{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","App","state","NONE","handleReset","setState","handleAlphabeticSort","handleLengthSort","handleReverse","className","type","classNames","this","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,QACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAChBD,EAAME,cAAcD,MAEtB,MAEF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAChBD,EAAMI,OAASH,EAAMG,UAQ3B,OAAOR,EAAaC,EAAaQ,UAAYR,G,SApC1CN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA6CE,IAAMe,EAAb,4MACEC,MAAe,CACbX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEC,YAAc,WACZ,EAAKC,SAAS,CAAEd,YAAY,EAAOD,SAAUJ,EAASiB,QAP1D,EAUEG,qBAAuB,WACrB,EAAKD,SAAS,CAAEf,SAAUJ,EAASO,WAXvC,EAcEc,iBAAmB,WACjB,EAAKF,SAAS,CAAEf,SAAUJ,EAASY,UAfvC,EAkBEU,cAAgB,WACd,EAAKH,UAAS,SAAAH,GAAK,MAAK,CAAEX,YAAaW,EAAMX,gBAnBjD,4CAsBE,WAAU,IAAD,OACP,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYC,KAAKV,MAAMZ,WAAaJ,EAASO,UAGjDoB,QAAS,kBACP,EAAKP,wBATT,iCAeA,wBACEI,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYC,KAAKV,MAAMZ,WAAaJ,EAASY,SAGjDe,QAAS,kBACP,EAAKN,oBAVT,4BAgBA,wBACEG,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAaC,KAAKV,MAAMX,aAG5BsB,QAAS,kBACP,EAAKL,iBAVT,sBAkBII,KAAKV,MAAMZ,WAAaJ,EAASiB,MAC9BS,KAAKV,MAAMX,aAGd,wBACEmB,KAAK,SACLD,UAAU,4BACVI,QAAS,kBACP,EAAKT,eAJT,sBAaN,6BACE,6BAEIhB,EAAkBD,EAAiByB,KAAKV,OAAOY,KAAI,SAAAC,GAAI,OACrD,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAhGxC,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3235a4c1.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((good1, good2) => (\n        good1.localeCompare(good2)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => (\n        good1.length - good2.length\n      ));\n      break;\n\n    default:\n      break;\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  handleAlphabeticSort = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  handleLengthSort = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': this.state.sortType !== SortType.ALPABET,\n              },\n            )}\n            onClick={() => (\n              this.handleAlphabeticSort()\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              {\n                'is-light': this.state.sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => (\n              this.handleLengthSort()\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              {\n                'is-light': !this.state.isReversed,\n              },\n            )}\n            onClick={() => (\n              this.handleReverse()\n            )}\n          >\n            Reverse\n          </button>\n\n          {\n            (\n              this.state.sortType !== SortType.NONE\n              || this.state.isReversed\n            )\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => (\n                  this.handleReset()\n                )}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n\n        <ul>\n          <ul>\n            {\n              getReorderedGoods(goodsFromServer, this.state).map(good => (\n                <li data-cy=\"Good\" key={good}>\n                  {good}\n                </li>\n              ))\n            }\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}